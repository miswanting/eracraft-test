name: Tag to Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-latest
            artifact: eracraft-sdk-windows-x64
            ext: zip
            args: ''
          - platform: ubuntu-latest
            artifact: eracraft-sdk-linux-x64
            ext: tar.gz
            args: ''
          # - platform: macos-latest
          #   artifact: eracraft-sdk-macos-x64
          #   ext: tar.gz
          #   args: --target x86_64-apple-darwin

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - name: Setup node (lts)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Setup rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Pages
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/configure-pages@v4

      - name: Install frontend dependencies
        run: |
          pnpm i
          pnpm icon

      - name: Build with VitePress
        if: matrix.platform == 'ubuntu-latest'
        run: pnpm run docs:build

      - name: Upload docs artifact
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/frontend/docs/.vitepress/dist

      - name: Build tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./packages/backend
          args: ${{ matrix.args }}

      - name: Assemble SDK
        run: |
          mkdir -p packages/sdk
          if [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            mv ./packages/backend/target/release/eracraft.exe ./packages/sdk/
            cd packages/sdk && zip -r ../../${{ matrix.artifact }}-${{ github.ref_name }}.zip . && cd ../..
          else
            mv ./packages/backend/target/release/eracraft ./packages/sdk/
            cd packages/sdk && tar -czf ../../${{ matrix.artifact }}-${{ github.ref_name }}.tar.gz . && cd ../..
          fi

      - name: Upload SDK Archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}-${{ github.ref_name }}.${{ matrix.ext }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts/

      - name: Debug
        run: ls -R artifacts/

      - name: Upload SDKs to Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.{zip,tar.gz}

  deploy-pages:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pages: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
