name: Generate Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-latest
            args: ''
          - platform: ubuntu-latest # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: macos-latest # for Arm based macs (M1 and above).
            args: --target aarch64-apple-darwin
          - platform: macos-latest # for Intel based macs.
            args: --target x86_64-apple-darwin

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup node (lts)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: |
          npm i -g pnpm
          pnpm i
          pnpm icon

      - name: Build tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./packages/backend
          args: ${{ matrix.args }}

      - name: Scan SDK
        run: |
          ls ./packages/
          ls ./packages/backend/target/release/
          ls ./packages/sdk/

      - name: Assemble SDK (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          mv ./packages/backend/target/release/eracraft.exe ./packages/sdk/

      - name: Assemble SDK (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mv ./packages/backend/target/release/eracraft ./packages/sdk/

      # - name: Upload APP
      #   if: matrix.platform == 'windows-latest'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: eracraft
      #     path: ./packages/sdk/eracraft.exe

      - name: Upload SDK
        uses: softprops/action-gh-release@v2
        with:
          files: ./packages/sdk
